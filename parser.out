Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHUMAL
    COMA
    COMENTARIO
    COMENTARIO_MULTILINEA
    KENO
    PONWITU
    POTENCIA

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instDefinicion -> RAKIN ID
Rule 4     instDefinicion -> NEMEL ID
Rule 5     instrucciones -> instruccion
Rule 6     instruccion -> instPekenun
Rule 7     instruccion -> instDefinicion
Rule 8     instruccion -> instAsignacion
Rule 9     instruccion -> instTuntentu
Rule 10    instruccion -> instMay
Rule 11    instruccion -> instKMay
Rule 12    instPekenun -> PEKENUN PARENTESISIZQ expString PARENTESISDER
Rule 13    instAsignacion -> ID ASIGNACION expNumero
Rule 14    instAsignacion -> ID ASIGNACION expString
Rule 15    instTuntentu -> TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
Rule 16    instMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
Rule 17    instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN
Rule 18    expNumero -> expNumero MAS expNumero
Rule 19    expNumero -> expNumero MENOS expNumero
Rule 20    expNumero -> expNumero POR expNumero
Rule 21    expNumero -> expNumero DIVIDIDO expNumero
Rule 22    expNumero -> PARENTESISIZQ expNumero PARENTESISDER
Rule 23    expNumero -> INT
Rule 24    expNumero -> FLOTANTE
Rule 25    expNumero -> ID
Rule 26    expString -> CADENA_TEXTO
Rule 27    expString -> expNumero
Rule 28    expString -> expString CONCAT expString
Rule 29    eL -> expNumero MAYOR expNumero
Rule 30    eL -> expNumero MENOR expNumero
Rule 31    eL -> expNumero IGUALQUE expNumero
Rule 32    eL -> expNumero DISTINTO expNumero

Terminals, with rules where they appear

ANTU                 : 15 16 17 17
ASIGNACION           : 13 14
CADENA_TEXTO         : 26
CHUMAL               : 
COMA                 : 
COMENTARIO           : 
COMENTARIO_MULTILINEA : 
CONCAT               : 28
DISTINTO             : 32
DIVIDIDO             : 21
FLOTANTE             : 24
ID                   : 3 4 13 14 25
IGUALQUE             : 31
INT                  : 23
KENO                 : 
KMAY                 : 17
KUYEN                : 15 16 17 17
MAS                  : 18
MAY                  : 16 17
MAYOR                : 29
MENOR                : 30
MENOS                : 19
NEMEL                : 4
PARENTESISDER        : 12 15 16 17 22
PARENTESISIZQ        : 12 15 16 17 22
PEKENUN              : 12
PONWITU              : 
POR                  : 20
POTENCIA             : 
RAKIN                : 3
TUNTENTU             : 15
error                : 

Nonterminals, with rules where they appear

eL                   : 15 16 17
expNumero            : 13 18 18 19 19 20 20 21 21 22 27 29 29 30 30 31 31 32 32
expString            : 12 14 28 28
init                 : 0
instAsignacion       : 8
instDefinicion       : 7
instKMay             : 11
instMay              : 10
instPekenun          : 6
instTuntentu         : 9
instruccion          : 2 5
instrucciones        : 1 2 15 16 17 17

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . instPekenun
    (7) instruccion -> . instDefinicion
    (8) instruccion -> . instAsignacion
    (9) instruccion -> . instTuntentu
    (10) instruccion -> . instMay
    (11) instruccion -> . instKMay
    (12) instPekenun -> . PEKENUN PARENTESISIZQ expString PARENTESISDER
    (3) instDefinicion -> . RAKIN ID
    (4) instDefinicion -> . NEMEL ID
    (13) instAsignacion -> . ID ASIGNACION expNumero
    (14) instAsignacion -> . ID ASIGNACION expString
    (15) instTuntentu -> . TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (16) instMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (17) instKMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN

    PEKENUN         shift and go to state 10
    RAKIN           shift and go to state 11
    NEMEL           shift and go to state 13
    ID              shift and go to state 12
    TUNTENTU        shift and go to state 14
    MAY             shift and go to state 15

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    instPekenun                    shift and go to state 4
    instDefinicion                 shift and go to state 5
    instAsignacion                 shift and go to state 6
    instTuntentu                   shift and go to state 7
    instMay                        shift and go to state 8
    instKMay                       shift and go to state 9

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . instPekenun
    (7) instruccion -> . instDefinicion
    (8) instruccion -> . instAsignacion
    (9) instruccion -> . instTuntentu
    (10) instruccion -> . instMay
    (11) instruccion -> . instKMay
    (12) instPekenun -> . PEKENUN PARENTESISIZQ expString PARENTESISDER
    (3) instDefinicion -> . RAKIN ID
    (4) instDefinicion -> . NEMEL ID
    (13) instAsignacion -> . ID ASIGNACION expNumero
    (14) instAsignacion -> . ID ASIGNACION expString
    (15) instTuntentu -> . TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (16) instMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (17) instKMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN

    $end            reduce using rule 1 (init -> instrucciones .)
    PEKENUN         shift and go to state 10
    RAKIN           shift and go to state 11
    NEMEL           shift and go to state 13
    ID              shift and go to state 12
    TUNTENTU        shift and go to state 14
    MAY             shift and go to state 15

    instruccion                    shift and go to state 16
    instPekenun                    shift and go to state 4
    instDefinicion                 shift and go to state 5
    instAsignacion                 shift and go to state 6
    instTuntentu                   shift and go to state 7
    instMay                        shift and go to state 8
    instKMay                       shift and go to state 9

state 3

    (5) instrucciones -> instruccion .

    PEKENUN         reduce using rule 5 (instrucciones -> instruccion .)
    RAKIN           reduce using rule 5 (instrucciones -> instruccion .)
    NEMEL           reduce using rule 5 (instrucciones -> instruccion .)
    ID              reduce using rule 5 (instrucciones -> instruccion .)
    TUNTENTU        reduce using rule 5 (instrucciones -> instruccion .)
    MAY             reduce using rule 5 (instrucciones -> instruccion .)
    $end            reduce using rule 5 (instrucciones -> instruccion .)
    KUYEN           reduce using rule 5 (instrucciones -> instruccion .)


state 4

    (6) instruccion -> instPekenun .

    PEKENUN         reduce using rule 6 (instruccion -> instPekenun .)
    RAKIN           reduce using rule 6 (instruccion -> instPekenun .)
    NEMEL           reduce using rule 6 (instruccion -> instPekenun .)
    ID              reduce using rule 6 (instruccion -> instPekenun .)
    TUNTENTU        reduce using rule 6 (instruccion -> instPekenun .)
    MAY             reduce using rule 6 (instruccion -> instPekenun .)
    $end            reduce using rule 6 (instruccion -> instPekenun .)
    KUYEN           reduce using rule 6 (instruccion -> instPekenun .)


state 5

    (7) instruccion -> instDefinicion .

    PEKENUN         reduce using rule 7 (instruccion -> instDefinicion .)
    RAKIN           reduce using rule 7 (instruccion -> instDefinicion .)
    NEMEL           reduce using rule 7 (instruccion -> instDefinicion .)
    ID              reduce using rule 7 (instruccion -> instDefinicion .)
    TUNTENTU        reduce using rule 7 (instruccion -> instDefinicion .)
    MAY             reduce using rule 7 (instruccion -> instDefinicion .)
    $end            reduce using rule 7 (instruccion -> instDefinicion .)
    KUYEN           reduce using rule 7 (instruccion -> instDefinicion .)


state 6

    (8) instruccion -> instAsignacion .

    PEKENUN         reduce using rule 8 (instruccion -> instAsignacion .)
    RAKIN           reduce using rule 8 (instruccion -> instAsignacion .)
    NEMEL           reduce using rule 8 (instruccion -> instAsignacion .)
    ID              reduce using rule 8 (instruccion -> instAsignacion .)
    TUNTENTU        reduce using rule 8 (instruccion -> instAsignacion .)
    MAY             reduce using rule 8 (instruccion -> instAsignacion .)
    $end            reduce using rule 8 (instruccion -> instAsignacion .)
    KUYEN           reduce using rule 8 (instruccion -> instAsignacion .)


state 7

    (9) instruccion -> instTuntentu .

    PEKENUN         reduce using rule 9 (instruccion -> instTuntentu .)
    RAKIN           reduce using rule 9 (instruccion -> instTuntentu .)
    NEMEL           reduce using rule 9 (instruccion -> instTuntentu .)
    ID              reduce using rule 9 (instruccion -> instTuntentu .)
    TUNTENTU        reduce using rule 9 (instruccion -> instTuntentu .)
    MAY             reduce using rule 9 (instruccion -> instTuntentu .)
    $end            reduce using rule 9 (instruccion -> instTuntentu .)
    KUYEN           reduce using rule 9 (instruccion -> instTuntentu .)


state 8

    (10) instruccion -> instMay .

    PEKENUN         reduce using rule 10 (instruccion -> instMay .)
    RAKIN           reduce using rule 10 (instruccion -> instMay .)
    NEMEL           reduce using rule 10 (instruccion -> instMay .)
    ID              reduce using rule 10 (instruccion -> instMay .)
    TUNTENTU        reduce using rule 10 (instruccion -> instMay .)
    MAY             reduce using rule 10 (instruccion -> instMay .)
    $end            reduce using rule 10 (instruccion -> instMay .)
    KUYEN           reduce using rule 10 (instruccion -> instMay .)


state 9

    (11) instruccion -> instKMay .

    PEKENUN         reduce using rule 11 (instruccion -> instKMay .)
    RAKIN           reduce using rule 11 (instruccion -> instKMay .)
    NEMEL           reduce using rule 11 (instruccion -> instKMay .)
    ID              reduce using rule 11 (instruccion -> instKMay .)
    TUNTENTU        reduce using rule 11 (instruccion -> instKMay .)
    MAY             reduce using rule 11 (instruccion -> instKMay .)
    $end            reduce using rule 11 (instruccion -> instKMay .)
    KUYEN           reduce using rule 11 (instruccion -> instKMay .)


state 10

    (12) instPekenun -> PEKENUN . PARENTESISIZQ expString PARENTESISDER

    PARENTESISIZQ   shift and go to state 17


state 11

    (3) instDefinicion -> RAKIN . ID

    ID              shift and go to state 18


state 12

    (13) instAsignacion -> ID . ASIGNACION expNumero
    (14) instAsignacion -> ID . ASIGNACION expString

    ASIGNACION      shift and go to state 19


state 13

    (4) instDefinicion -> NEMEL . ID

    ID              shift and go to state 20


state 14

    (15) instTuntentu -> TUNTENTU . PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN

    PARENTESISIZQ   shift and go to state 21


state 15

    (16) instMay -> MAY . PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (17) instKMay -> MAY . PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN

    PARENTESISIZQ   shift and go to state 22


state 16

    (2) instrucciones -> instrucciones instruccion .

    PEKENUN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RAKIN           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NEMEL           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TUNTENTU        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MAY             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    KUYEN           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 17

    (12) instPekenun -> PEKENUN PARENTESISIZQ . expString PARENTESISDER
    (26) expString -> . CADENA_TEXTO
    (27) expString -> . expNumero
    (28) expString -> . expString CONCAT expString
    (18) expNumero -> . expNumero MAS expNumero
    (19) expNumero -> . expNumero MENOS expNumero
    (20) expNumero -> . expNumero POR expNumero
    (21) expNumero -> . expNumero DIVIDIDO expNumero
    (22) expNumero -> . PARENTESISIZQ expNumero PARENTESISDER
    (23) expNumero -> . INT
    (24) expNumero -> . FLOTANTE
    (25) expNumero -> . ID

    CADENA_TEXTO    shift and go to state 25
    PARENTESISIZQ   shift and go to state 23
    INT             shift and go to state 27
    FLOTANTE        shift and go to state 28
    ID              shift and go to state 29

    expString                      shift and go to state 24
    expNumero                      shift and go to state 26

state 18

    (3) instDefinicion -> RAKIN ID .

    PEKENUN         reduce using rule 3 (instDefinicion -> RAKIN ID .)
    RAKIN           reduce using rule 3 (instDefinicion -> RAKIN ID .)
    NEMEL           reduce using rule 3 (instDefinicion -> RAKIN ID .)
    ID              reduce using rule 3 (instDefinicion -> RAKIN ID .)
    TUNTENTU        reduce using rule 3 (instDefinicion -> RAKIN ID .)
    MAY             reduce using rule 3 (instDefinicion -> RAKIN ID .)
    $end            reduce using rule 3 (instDefinicion -> RAKIN ID .)
    KUYEN           reduce using rule 3 (instDefinicion -> RAKIN ID .)


state 19

    (13) instAsignacion -> ID ASIGNACION . expNumero
    (14) instAsignacion -> ID ASIGNACION . expString
    (18) expNumero -> . expNumero MAS expNumero
    (19) expNumero -> . expNumero MENOS expNumero
    (20) expNumero -> . expNumero POR expNumero
    (21) expNumero -> . expNumero DIVIDIDO expNumero
    (22) expNumero -> . PARENTESISIZQ expNumero PARENTESISDER
    (23) expNumero -> . INT
    (24) expNumero -> . FLOTANTE
    (25) expNumero -> . ID
    (26) expString -> . CADENA_TEXTO
    (27) expString -> . expNumero
    (28) expString -> . expString CONCAT expString

    PARENTESISIZQ   shift and go to state 23
    INT             shift and go to state 27
    FLOTANTE        shift and go to state 28
    ID              shift and go to state 29
    CADENA_TEXTO    shift and go to state 25

    expNumero                      shift and go to state 30
    expString                      shift and go to state 31

state 20

    (4) instDefinicion -> NEMEL ID .

    PEKENUN         reduce using rule 4 (instDefinicion -> NEMEL ID .)
    RAKIN           reduce using rule 4 (instDefinicion -> NEMEL ID .)
    NEMEL           reduce using rule 4 (instDefinicion -> NEMEL ID .)
    ID              reduce using rule 4 (instDefinicion -> NEMEL ID .)
    TUNTENTU        reduce using rule 4 (instDefinicion -> NEMEL ID .)
    MAY             reduce using rule 4 (instDefinicion -> NEMEL ID .)
    $end            reduce using rule 4 (instDefinicion -> NEMEL ID .)
    KUYEN           reduce using rule 4 (instDefinicion -> NEMEL ID .)


state 21

    (15) instTuntentu -> TUNTENTU PARENTESISIZQ . eL PARENTESISDER ANTU instrucciones KUYEN
    (29) eL -> . expNumero MAYOR expNumero
    (30) eL -> . expNumero MENOR expNumero
    (31) eL -> . expNumero IGUALQUE expNumero
    (32) eL -> . expNumero DISTINTO expNumero
    (18) expNumero -> . expNumero MAS expNumero
    (19) expNumero -> . expNumero MENOS expNumero
    (20) expNumero -> . expNumero POR expNumero
    (21) expNumero -> . expNumero DIVIDIDO expNumero
    (22) expNumero -> . PARENTESISIZQ expNumero PARENTESISDER
    (23) expNumero -> . INT
    (24) expNumero -> . FLOTANTE
    (25) expNumero -> . ID

    PARENTESISIZQ   shift and go to state 23
    INT             shift and go to state 27
    FLOTANTE        shift and go to state 28
    ID              shift and go to state 29

    eL                             shift and go to state 32
    expNumero                      shift and go to state 33

state 22

    (16) instMay -> MAY PARENTESISIZQ . eL PARENTESISDER ANTU instrucciones KUYEN
    (17) instKMay -> MAY PARENTESISIZQ . eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN
    (29) eL -> . expNumero MAYOR expNumero
    (30) eL -> . expNumero MENOR expNumero
    (31) eL -> . expNumero IGUALQUE expNumero
    (32) eL -> . expNumero DISTINTO expNumero
    (18) expNumero -> . expNumero MAS expNumero
    (19) expNumero -> . expNumero MENOS expNumero
    (20) expNumero -> . expNumero POR expNumero
    (21) expNumero -> . expNumero DIVIDIDO expNumero
    (22) expNumero -> . PARENTESISIZQ expNumero PARENTESISDER
    (23) expNumero -> . INT
    (24) expNumero -> . FLOTANTE
    (25) expNumero -> . ID

    PARENTESISIZQ   shift and go to state 23
    INT             shift and go to state 27
    FLOTANTE        shift and go to state 28
    ID              shift and go to state 29

    eL                             shift and go to state 34
    expNumero                      shift and go to state 33

state 23

    (22) expNumero -> PARENTESISIZQ . expNumero PARENTESISDER
    (18) expNumero -> . expNumero MAS expNumero
    (19) expNumero -> . expNumero MENOS expNumero
    (20) expNumero -> . expNumero POR expNumero
    (21) expNumero -> . expNumero DIVIDIDO expNumero
    (22) expNumero -> . PARENTESISIZQ expNumero PARENTESISDER
    (23) expNumero -> . INT
    (24) expNumero -> . FLOTANTE
    (25) expNumero -> . ID

    PARENTESISIZQ   shift and go to state 23
    INT             shift and go to state 27
    FLOTANTE        shift and go to state 28
    ID              shift and go to state 29

    expNumero                      shift and go to state 35

state 24

    (12) instPekenun -> PEKENUN PARENTESISIZQ expString . PARENTESISDER
    (28) expString -> expString . CONCAT expString

    PARENTESISDER   shift and go to state 36
    CONCAT          shift and go to state 37


state 25

    (26) expString -> CADENA_TEXTO .

    PARENTESISDER   reduce using rule 26 (expString -> CADENA_TEXTO .)
    CONCAT          reduce using rule 26 (expString -> CADENA_TEXTO .)
    PEKENUN         reduce using rule 26 (expString -> CADENA_TEXTO .)
    RAKIN           reduce using rule 26 (expString -> CADENA_TEXTO .)
    NEMEL           reduce using rule 26 (expString -> CADENA_TEXTO .)
    ID              reduce using rule 26 (expString -> CADENA_TEXTO .)
    TUNTENTU        reduce using rule 26 (expString -> CADENA_TEXTO .)
    MAY             reduce using rule 26 (expString -> CADENA_TEXTO .)
    $end            reduce using rule 26 (expString -> CADENA_TEXTO .)
    KUYEN           reduce using rule 26 (expString -> CADENA_TEXTO .)


state 26

    (27) expString -> expNumero .
    (18) expNumero -> expNumero . MAS expNumero
    (19) expNumero -> expNumero . MENOS expNumero
    (20) expNumero -> expNumero . POR expNumero
    (21) expNumero -> expNumero . DIVIDIDO expNumero

    PARENTESISDER   reduce using rule 27 (expString -> expNumero .)
    CONCAT          reduce using rule 27 (expString -> expNumero .)
    PEKENUN         reduce using rule 27 (expString -> expNumero .)
    RAKIN           reduce using rule 27 (expString -> expNumero .)
    NEMEL           reduce using rule 27 (expString -> expNumero .)
    ID              reduce using rule 27 (expString -> expNumero .)
    TUNTENTU        reduce using rule 27 (expString -> expNumero .)
    MAY             reduce using rule 27 (expString -> expNumero .)
    $end            reduce using rule 27 (expString -> expNumero .)
    KUYEN           reduce using rule 27 (expString -> expNumero .)
    MAS             shift and go to state 38
    MENOS           shift and go to state 39
    POR             shift and go to state 40
    DIVIDIDO        shift and go to state 41


state 27

    (23) expNumero -> INT .

    MAS             reduce using rule 23 (expNumero -> INT .)
    MENOS           reduce using rule 23 (expNumero -> INT .)
    POR             reduce using rule 23 (expNumero -> INT .)
    DIVIDIDO        reduce using rule 23 (expNumero -> INT .)
    PARENTESISDER   reduce using rule 23 (expNumero -> INT .)
    CONCAT          reduce using rule 23 (expNumero -> INT .)
    PEKENUN         reduce using rule 23 (expNumero -> INT .)
    RAKIN           reduce using rule 23 (expNumero -> INT .)
    NEMEL           reduce using rule 23 (expNumero -> INT .)
    ID              reduce using rule 23 (expNumero -> INT .)
    TUNTENTU        reduce using rule 23 (expNumero -> INT .)
    MAY             reduce using rule 23 (expNumero -> INT .)
    $end            reduce using rule 23 (expNumero -> INT .)
    KUYEN           reduce using rule 23 (expNumero -> INT .)
    MAYOR           reduce using rule 23 (expNumero -> INT .)
    MENOR           reduce using rule 23 (expNumero -> INT .)
    IGUALQUE        reduce using rule 23 (expNumero -> INT .)
    DISTINTO        reduce using rule 23 (expNumero -> INT .)


state 28

    (24) expNumero -> FLOTANTE .

    MAS             reduce using rule 24 (expNumero -> FLOTANTE .)
    MENOS           reduce using rule 24 (expNumero -> FLOTANTE .)
    POR             reduce using rule 24 (expNumero -> FLOTANTE .)
    DIVIDIDO        reduce using rule 24 (expNumero -> FLOTANTE .)
    PARENTESISDER   reduce using rule 24 (expNumero -> FLOTANTE .)
    CONCAT          reduce using rule 24 (expNumero -> FLOTANTE .)
    PEKENUN         reduce using rule 24 (expNumero -> FLOTANTE .)
    RAKIN           reduce using rule 24 (expNumero -> FLOTANTE .)
    NEMEL           reduce using rule 24 (expNumero -> FLOTANTE .)
    ID              reduce using rule 24 (expNumero -> FLOTANTE .)
    TUNTENTU        reduce using rule 24 (expNumero -> FLOTANTE .)
    MAY             reduce using rule 24 (expNumero -> FLOTANTE .)
    $end            reduce using rule 24 (expNumero -> FLOTANTE .)
    KUYEN           reduce using rule 24 (expNumero -> FLOTANTE .)
    MAYOR           reduce using rule 24 (expNumero -> FLOTANTE .)
    MENOR           reduce using rule 24 (expNumero -> FLOTANTE .)
    IGUALQUE        reduce using rule 24 (expNumero -> FLOTANTE .)
    DISTINTO        reduce using rule 24 (expNumero -> FLOTANTE .)


state 29

    (25) expNumero -> ID .

    MAS             reduce using rule 25 (expNumero -> ID .)
    MENOS           reduce using rule 25 (expNumero -> ID .)
    POR             reduce using rule 25 (expNumero -> ID .)
    DIVIDIDO        reduce using rule 25 (expNumero -> ID .)
    PARENTESISDER   reduce using rule 25 (expNumero -> ID .)
    CONCAT          reduce using rule 25 (expNumero -> ID .)
    PEKENUN         reduce using rule 25 (expNumero -> ID .)
    RAKIN           reduce using rule 25 (expNumero -> ID .)
    NEMEL           reduce using rule 25 (expNumero -> ID .)
    ID              reduce using rule 25 (expNumero -> ID .)
    TUNTENTU        reduce using rule 25 (expNumero -> ID .)
    MAY             reduce using rule 25 (expNumero -> ID .)
    $end            reduce using rule 25 (expNumero -> ID .)
    KUYEN           reduce using rule 25 (expNumero -> ID .)
    MAYOR           reduce using rule 25 (expNumero -> ID .)
    MENOR           reduce using rule 25 (expNumero -> ID .)
    IGUALQUE        reduce using rule 25 (expNumero -> ID .)
    DISTINTO        reduce using rule 25 (expNumero -> ID .)


state 30

    (13) instAsignacion -> ID ASIGNACION expNumero .
    (18) expNumero -> expNumero . MAS expNumero
    (19) expNumero -> expNumero . MENOS expNumero
    (20) expNumero -> expNumero . POR expNumero
    (21) expNumero -> expNumero . DIVIDIDO expNumero
    (27) expString -> expNumero .

  ! reduce/reduce conflict for PEKENUN resolved using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
  ! reduce/reduce conflict for RAKIN resolved using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
  ! reduce/reduce conflict for NEMEL resolved using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
  ! reduce/reduce conflict for ID resolved using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
  ! reduce/reduce conflict for TUNTENTU resolved using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
  ! reduce/reduce conflict for MAY resolved using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
  ! reduce/reduce conflict for $end resolved using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
  ! reduce/reduce conflict for KUYEN resolved using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
    PEKENUN         reduce using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
    RAKIN           reduce using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
    NEMEL           reduce using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
    ID              reduce using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
    TUNTENTU        reduce using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
    MAY             reduce using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
    $end            reduce using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
    KUYEN           reduce using rule 13 (instAsignacion -> ID ASIGNACION expNumero .)
    MAS             shift and go to state 38
    MENOS           shift and go to state 39
    POR             shift and go to state 40
    DIVIDIDO        shift and go to state 41
    CONCAT          reduce using rule 27 (expString -> expNumero .)

  ! PEKENUN         [ reduce using rule 27 (expString -> expNumero .) ]
  ! RAKIN           [ reduce using rule 27 (expString -> expNumero .) ]
  ! NEMEL           [ reduce using rule 27 (expString -> expNumero .) ]
  ! ID              [ reduce using rule 27 (expString -> expNumero .) ]
  ! TUNTENTU        [ reduce using rule 27 (expString -> expNumero .) ]
  ! MAY             [ reduce using rule 27 (expString -> expNumero .) ]
  ! $end            [ reduce using rule 27 (expString -> expNumero .) ]
  ! KUYEN           [ reduce using rule 27 (expString -> expNumero .) ]


state 31

    (14) instAsignacion -> ID ASIGNACION expString .
    (28) expString -> expString . CONCAT expString

    PEKENUN         reduce using rule 14 (instAsignacion -> ID ASIGNACION expString .)
    RAKIN           reduce using rule 14 (instAsignacion -> ID ASIGNACION expString .)
    NEMEL           reduce using rule 14 (instAsignacion -> ID ASIGNACION expString .)
    ID              reduce using rule 14 (instAsignacion -> ID ASIGNACION expString .)
    TUNTENTU        reduce using rule 14 (instAsignacion -> ID ASIGNACION expString .)
    MAY             reduce using rule 14 (instAsignacion -> ID ASIGNACION expString .)
    $end            reduce using rule 14 (instAsignacion -> ID ASIGNACION expString .)
    KUYEN           reduce using rule 14 (instAsignacion -> ID ASIGNACION expString .)
    CONCAT          shift and go to state 37


state 32

    (15) instTuntentu -> TUNTENTU PARENTESISIZQ eL . PARENTESISDER ANTU instrucciones KUYEN

    PARENTESISDER   shift and go to state 42


state 33

    (29) eL -> expNumero . MAYOR expNumero
    (30) eL -> expNumero . MENOR expNumero
    (31) eL -> expNumero . IGUALQUE expNumero
    (32) eL -> expNumero . DISTINTO expNumero
    (18) expNumero -> expNumero . MAS expNumero
    (19) expNumero -> expNumero . MENOS expNumero
    (20) expNumero -> expNumero . POR expNumero
    (21) expNumero -> expNumero . DIVIDIDO expNumero

    MAYOR           shift and go to state 43
    MENOR           shift and go to state 44
    IGUALQUE        shift and go to state 45
    DISTINTO        shift and go to state 46
    MAS             shift and go to state 38
    MENOS           shift and go to state 39
    POR             shift and go to state 40
    DIVIDIDO        shift and go to state 41


state 34

    (16) instMay -> MAY PARENTESISIZQ eL . PARENTESISDER ANTU instrucciones KUYEN
    (17) instKMay -> MAY PARENTESISIZQ eL . PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN

    PARENTESISDER   shift and go to state 47


state 35

    (22) expNumero -> PARENTESISIZQ expNumero . PARENTESISDER
    (18) expNumero -> expNumero . MAS expNumero
    (19) expNumero -> expNumero . MENOS expNumero
    (20) expNumero -> expNumero . POR expNumero
    (21) expNumero -> expNumero . DIVIDIDO expNumero

    PARENTESISDER   shift and go to state 48
    MAS             shift and go to state 38
    MENOS           shift and go to state 39
    POR             shift and go to state 40
    DIVIDIDO        shift and go to state 41


state 36

    (12) instPekenun -> PEKENUN PARENTESISIZQ expString PARENTESISDER .

    PEKENUN         reduce using rule 12 (instPekenun -> PEKENUN PARENTESISIZQ expString PARENTESISDER .)
    RAKIN           reduce using rule 12 (instPekenun -> PEKENUN PARENTESISIZQ expString PARENTESISDER .)
    NEMEL           reduce using rule 12 (instPekenun -> PEKENUN PARENTESISIZQ expString PARENTESISDER .)
    ID              reduce using rule 12 (instPekenun -> PEKENUN PARENTESISIZQ expString PARENTESISDER .)
    TUNTENTU        reduce using rule 12 (instPekenun -> PEKENUN PARENTESISIZQ expString PARENTESISDER .)
    MAY             reduce using rule 12 (instPekenun -> PEKENUN PARENTESISIZQ expString PARENTESISDER .)
    $end            reduce using rule 12 (instPekenun -> PEKENUN PARENTESISIZQ expString PARENTESISDER .)
    KUYEN           reduce using rule 12 (instPekenun -> PEKENUN PARENTESISIZQ expString PARENTESISDER .)


state 37

    (28) expString -> expString CONCAT . expString
    (26) expString -> . CADENA_TEXTO
    (27) expString -> . expNumero
    (28) expString -> . expString CONCAT expString
    (18) expNumero -> . expNumero MAS expNumero
    (19) expNumero -> . expNumero MENOS expNumero
    (20) expNumero -> . expNumero POR expNumero
    (21) expNumero -> . expNumero DIVIDIDO expNumero
    (22) expNumero -> . PARENTESISIZQ expNumero PARENTESISDER
    (23) expNumero -> . INT
    (24) expNumero -> . FLOTANTE
    (25) expNumero -> . ID

    CADENA_TEXTO    shift and go to state 25
    PARENTESISIZQ   shift and go to state 23
    INT             shift and go to state 27
    FLOTANTE        shift and go to state 28
    ID              shift and go to state 29

    expString                      shift and go to state 49
    expNumero                      shift and go to state 26

state 38

    (18) expNumero -> expNumero MAS . expNumero
    (18) expNumero -> . expNumero MAS expNumero
    (19) expNumero -> . expNumero MENOS expNumero
    (20) expNumero -> . expNumero POR expNumero
    (21) expNumero -> . expNumero DIVIDIDO expNumero
    (22) expNumero -> . PARENTESISIZQ expNumero PARENTESISDER
    (23) expNumero -> . INT
    (24) expNumero -> . FLOTANTE
    (25) expNumero -> . ID

    PARENTESISIZQ   shift and go to state 23
    INT             shift and go to state 27
    FLOTANTE        shift and go to state 28
    ID              shift and go to state 29

    expNumero                      shift and go to state 50

state 39

    (19) expNumero -> expNumero MENOS . expNumero
    (18) expNumero -> . expNumero MAS expNumero
    (19) expNumero -> . expNumero MENOS expNumero
    (20) expNumero -> . expNumero POR expNumero
    (21) expNumero -> . expNumero DIVIDIDO expNumero
    (22) expNumero -> . PARENTESISIZQ expNumero PARENTESISDER
    (23) expNumero -> . INT
    (24) expNumero -> . FLOTANTE
    (25) expNumero -> . ID

    PARENTESISIZQ   shift and go to state 23
    INT             shift and go to state 27
    FLOTANTE        shift and go to state 28
    ID              shift and go to state 29

    expNumero                      shift and go to state 51

state 40

    (20) expNumero -> expNumero POR . expNumero
    (18) expNumero -> . expNumero MAS expNumero
    (19) expNumero -> . expNumero MENOS expNumero
    (20) expNumero -> . expNumero POR expNumero
    (21) expNumero -> . expNumero DIVIDIDO expNumero
    (22) expNumero -> . PARENTESISIZQ expNumero PARENTESISDER
    (23) expNumero -> . INT
    (24) expNumero -> . FLOTANTE
    (25) expNumero -> . ID

    PARENTESISIZQ   shift and go to state 23
    INT             shift and go to state 27
    FLOTANTE        shift and go to state 28
    ID              shift and go to state 29

    expNumero                      shift and go to state 52

state 41

    (21) expNumero -> expNumero DIVIDIDO . expNumero
    (18) expNumero -> . expNumero MAS expNumero
    (19) expNumero -> . expNumero MENOS expNumero
    (20) expNumero -> . expNumero POR expNumero
    (21) expNumero -> . expNumero DIVIDIDO expNumero
    (22) expNumero -> . PARENTESISIZQ expNumero PARENTESISDER
    (23) expNumero -> . INT
    (24) expNumero -> . FLOTANTE
    (25) expNumero -> . ID

    PARENTESISIZQ   shift and go to state 23
    INT             shift and go to state 27
    FLOTANTE        shift and go to state 28
    ID              shift and go to state 29

    expNumero                      shift and go to state 53

state 42

    (15) instTuntentu -> TUNTENTU PARENTESISIZQ eL PARENTESISDER . ANTU instrucciones KUYEN

    ANTU            shift and go to state 54


state 43

    (29) eL -> expNumero MAYOR . expNumero
    (18) expNumero -> . expNumero MAS expNumero
    (19) expNumero -> . expNumero MENOS expNumero
    (20) expNumero -> . expNumero POR expNumero
    (21) expNumero -> . expNumero DIVIDIDO expNumero
    (22) expNumero -> . PARENTESISIZQ expNumero PARENTESISDER
    (23) expNumero -> . INT
    (24) expNumero -> . FLOTANTE
    (25) expNumero -> . ID

    PARENTESISIZQ   shift and go to state 23
    INT             shift and go to state 27
    FLOTANTE        shift and go to state 28
    ID              shift and go to state 29

    expNumero                      shift and go to state 55

state 44

    (30) eL -> expNumero MENOR . expNumero
    (18) expNumero -> . expNumero MAS expNumero
    (19) expNumero -> . expNumero MENOS expNumero
    (20) expNumero -> . expNumero POR expNumero
    (21) expNumero -> . expNumero DIVIDIDO expNumero
    (22) expNumero -> . PARENTESISIZQ expNumero PARENTESISDER
    (23) expNumero -> . INT
    (24) expNumero -> . FLOTANTE
    (25) expNumero -> . ID

    PARENTESISIZQ   shift and go to state 23
    INT             shift and go to state 27
    FLOTANTE        shift and go to state 28
    ID              shift and go to state 29

    expNumero                      shift and go to state 56

state 45

    (31) eL -> expNumero IGUALQUE . expNumero
    (18) expNumero -> . expNumero MAS expNumero
    (19) expNumero -> . expNumero MENOS expNumero
    (20) expNumero -> . expNumero POR expNumero
    (21) expNumero -> . expNumero DIVIDIDO expNumero
    (22) expNumero -> . PARENTESISIZQ expNumero PARENTESISDER
    (23) expNumero -> . INT
    (24) expNumero -> . FLOTANTE
    (25) expNumero -> . ID

    PARENTESISIZQ   shift and go to state 23
    INT             shift and go to state 27
    FLOTANTE        shift and go to state 28
    ID              shift and go to state 29

    expNumero                      shift and go to state 57

state 46

    (32) eL -> expNumero DISTINTO . expNumero
    (18) expNumero -> . expNumero MAS expNumero
    (19) expNumero -> . expNumero MENOS expNumero
    (20) expNumero -> . expNumero POR expNumero
    (21) expNumero -> . expNumero DIVIDIDO expNumero
    (22) expNumero -> . PARENTESISIZQ expNumero PARENTESISDER
    (23) expNumero -> . INT
    (24) expNumero -> . FLOTANTE
    (25) expNumero -> . ID

    PARENTESISIZQ   shift and go to state 23
    INT             shift and go to state 27
    FLOTANTE        shift and go to state 28
    ID              shift and go to state 29

    expNumero                      shift and go to state 58

state 47

    (16) instMay -> MAY PARENTESISIZQ eL PARENTESISDER . ANTU instrucciones KUYEN
    (17) instKMay -> MAY PARENTESISIZQ eL PARENTESISDER . ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN

    ANTU            shift and go to state 59


state 48

    (22) expNumero -> PARENTESISIZQ expNumero PARENTESISDER .

    MAS             reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    MENOS           reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    POR             reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    DIVIDIDO        reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    PARENTESISDER   reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    CONCAT          reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    PEKENUN         reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    RAKIN           reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    NEMEL           reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    ID              reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    TUNTENTU        reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    MAY             reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    $end            reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    KUYEN           reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    MAYOR           reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    MENOR           reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    IGUALQUE        reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)
    DISTINTO        reduce using rule 22 (expNumero -> PARENTESISIZQ expNumero PARENTESISDER .)


state 49

    (28) expString -> expString CONCAT expString .
    (28) expString -> expString . CONCAT expString

  ! shift/reduce conflict for CONCAT resolved as shift
    PARENTESISDER   reduce using rule 28 (expString -> expString CONCAT expString .)
    PEKENUN         reduce using rule 28 (expString -> expString CONCAT expString .)
    RAKIN           reduce using rule 28 (expString -> expString CONCAT expString .)
    NEMEL           reduce using rule 28 (expString -> expString CONCAT expString .)
    ID              reduce using rule 28 (expString -> expString CONCAT expString .)
    TUNTENTU        reduce using rule 28 (expString -> expString CONCAT expString .)
    MAY             reduce using rule 28 (expString -> expString CONCAT expString .)
    $end            reduce using rule 28 (expString -> expString CONCAT expString .)
    KUYEN           reduce using rule 28 (expString -> expString CONCAT expString .)
    CONCAT          shift and go to state 37

  ! CONCAT          [ reduce using rule 28 (expString -> expString CONCAT expString .) ]


state 50

    (18) expNumero -> expNumero MAS expNumero .
    (18) expNumero -> expNumero . MAS expNumero
    (19) expNumero -> expNumero . MENOS expNumero
    (20) expNumero -> expNumero . POR expNumero
    (21) expNumero -> expNumero . DIVIDIDO expNumero

    MAS             reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    MENOS           reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    PARENTESISDER   reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    CONCAT          reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    PEKENUN         reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    RAKIN           reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    NEMEL           reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    ID              reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    TUNTENTU        reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    MAY             reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    $end            reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    KUYEN           reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    MAYOR           reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    MENOR           reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    IGUALQUE        reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    DISTINTO        reduce using rule 18 (expNumero -> expNumero MAS expNumero .)
    POR             shift and go to state 40
    DIVIDIDO        shift and go to state 41

  ! POR             [ reduce using rule 18 (expNumero -> expNumero MAS expNumero .) ]
  ! DIVIDIDO        [ reduce using rule 18 (expNumero -> expNumero MAS expNumero .) ]
  ! MAS             [ shift and go to state 38 ]
  ! MENOS           [ shift and go to state 39 ]


state 51

    (19) expNumero -> expNumero MENOS expNumero .
    (18) expNumero -> expNumero . MAS expNumero
    (19) expNumero -> expNumero . MENOS expNumero
    (20) expNumero -> expNumero . POR expNumero
    (21) expNumero -> expNumero . DIVIDIDO expNumero

    MAS             reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    MENOS           reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    PARENTESISDER   reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    CONCAT          reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    PEKENUN         reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    RAKIN           reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    NEMEL           reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    ID              reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    TUNTENTU        reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    MAY             reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    $end            reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    KUYEN           reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    MAYOR           reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    MENOR           reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    IGUALQUE        reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    DISTINTO        reduce using rule 19 (expNumero -> expNumero MENOS expNumero .)
    POR             shift and go to state 40
    DIVIDIDO        shift and go to state 41

  ! POR             [ reduce using rule 19 (expNumero -> expNumero MENOS expNumero .) ]
  ! DIVIDIDO        [ reduce using rule 19 (expNumero -> expNumero MENOS expNumero .) ]
  ! MAS             [ shift and go to state 38 ]
  ! MENOS           [ shift and go to state 39 ]


state 52

    (20) expNumero -> expNumero POR expNumero .
    (18) expNumero -> expNumero . MAS expNumero
    (19) expNumero -> expNumero . MENOS expNumero
    (20) expNumero -> expNumero . POR expNumero
    (21) expNumero -> expNumero . DIVIDIDO expNumero

    MAS             reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    MENOS           reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    POR             reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    DIVIDIDO        reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    PARENTESISDER   reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    CONCAT          reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    PEKENUN         reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    RAKIN           reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    NEMEL           reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    ID              reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    TUNTENTU        reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    MAY             reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    $end            reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    KUYEN           reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    MAYOR           reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    MENOR           reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    IGUALQUE        reduce using rule 20 (expNumero -> expNumero POR expNumero .)
    DISTINTO        reduce using rule 20 (expNumero -> expNumero POR expNumero .)

  ! MAS             [ shift and go to state 38 ]
  ! MENOS           [ shift and go to state 39 ]
  ! POR             [ shift and go to state 40 ]
  ! DIVIDIDO        [ shift and go to state 41 ]


state 53

    (21) expNumero -> expNumero DIVIDIDO expNumero .
    (18) expNumero -> expNumero . MAS expNumero
    (19) expNumero -> expNumero . MENOS expNumero
    (20) expNumero -> expNumero . POR expNumero
    (21) expNumero -> expNumero . DIVIDIDO expNumero

    MAS             reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    MENOS           reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    POR             reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    DIVIDIDO        reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    PARENTESISDER   reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    CONCAT          reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    PEKENUN         reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    RAKIN           reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    NEMEL           reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    ID              reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    TUNTENTU        reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    MAY             reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    $end            reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    KUYEN           reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    MAYOR           reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    MENOR           reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    IGUALQUE        reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)
    DISTINTO        reduce using rule 21 (expNumero -> expNumero DIVIDIDO expNumero .)

  ! MAS             [ shift and go to state 38 ]
  ! MENOS           [ shift and go to state 39 ]
  ! POR             [ shift and go to state 40 ]
  ! DIVIDIDO        [ shift and go to state 41 ]


state 54

    (15) instTuntentu -> TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU . instrucciones KUYEN
    (2) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . instPekenun
    (7) instruccion -> . instDefinicion
    (8) instruccion -> . instAsignacion
    (9) instruccion -> . instTuntentu
    (10) instruccion -> . instMay
    (11) instruccion -> . instKMay
    (12) instPekenun -> . PEKENUN PARENTESISIZQ expString PARENTESISDER
    (3) instDefinicion -> . RAKIN ID
    (4) instDefinicion -> . NEMEL ID
    (13) instAsignacion -> . ID ASIGNACION expNumero
    (14) instAsignacion -> . ID ASIGNACION expString
    (15) instTuntentu -> . TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (16) instMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (17) instKMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN

    PEKENUN         shift and go to state 10
    RAKIN           shift and go to state 11
    NEMEL           shift and go to state 13
    ID              shift and go to state 12
    TUNTENTU        shift and go to state 14
    MAY             shift and go to state 15

    instrucciones                  shift and go to state 60
    instruccion                    shift and go to state 3
    instPekenun                    shift and go to state 4
    instDefinicion                 shift and go to state 5
    instAsignacion                 shift and go to state 6
    instTuntentu                   shift and go to state 7
    instMay                        shift and go to state 8
    instKMay                       shift and go to state 9

state 55

    (29) eL -> expNumero MAYOR expNumero .
    (18) expNumero -> expNumero . MAS expNumero
    (19) expNumero -> expNumero . MENOS expNumero
    (20) expNumero -> expNumero . POR expNumero
    (21) expNumero -> expNumero . DIVIDIDO expNumero

    PARENTESISDER   reduce using rule 29 (eL -> expNumero MAYOR expNumero .)
    MAS             shift and go to state 38
    MENOS           shift and go to state 39
    POR             shift and go to state 40
    DIVIDIDO        shift and go to state 41


state 56

    (30) eL -> expNumero MENOR expNumero .
    (18) expNumero -> expNumero . MAS expNumero
    (19) expNumero -> expNumero . MENOS expNumero
    (20) expNumero -> expNumero . POR expNumero
    (21) expNumero -> expNumero . DIVIDIDO expNumero

    PARENTESISDER   reduce using rule 30 (eL -> expNumero MENOR expNumero .)
    MAS             shift and go to state 38
    MENOS           shift and go to state 39
    POR             shift and go to state 40
    DIVIDIDO        shift and go to state 41


state 57

    (31) eL -> expNumero IGUALQUE expNumero .
    (18) expNumero -> expNumero . MAS expNumero
    (19) expNumero -> expNumero . MENOS expNumero
    (20) expNumero -> expNumero . POR expNumero
    (21) expNumero -> expNumero . DIVIDIDO expNumero

    PARENTESISDER   reduce using rule 31 (eL -> expNumero IGUALQUE expNumero .)
    MAS             shift and go to state 38
    MENOS           shift and go to state 39
    POR             shift and go to state 40
    DIVIDIDO        shift and go to state 41


state 58

    (32) eL -> expNumero DISTINTO expNumero .
    (18) expNumero -> expNumero . MAS expNumero
    (19) expNumero -> expNumero . MENOS expNumero
    (20) expNumero -> expNumero . POR expNumero
    (21) expNumero -> expNumero . DIVIDIDO expNumero

    PARENTESISDER   reduce using rule 32 (eL -> expNumero DISTINTO expNumero .)
    MAS             shift and go to state 38
    MENOS           shift and go to state 39
    POR             shift and go to state 40
    DIVIDIDO        shift and go to state 41


state 59

    (16) instMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU . instrucciones KUYEN
    (17) instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU . instrucciones KUYEN KMAY ANTU instrucciones KUYEN
    (2) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . instPekenun
    (7) instruccion -> . instDefinicion
    (8) instruccion -> . instAsignacion
    (9) instruccion -> . instTuntentu
    (10) instruccion -> . instMay
    (11) instruccion -> . instKMay
    (12) instPekenun -> . PEKENUN PARENTESISIZQ expString PARENTESISDER
    (3) instDefinicion -> . RAKIN ID
    (4) instDefinicion -> . NEMEL ID
    (13) instAsignacion -> . ID ASIGNACION expNumero
    (14) instAsignacion -> . ID ASIGNACION expString
    (15) instTuntentu -> . TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (16) instMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (17) instKMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN

    PEKENUN         shift and go to state 10
    RAKIN           shift and go to state 11
    NEMEL           shift and go to state 13
    ID              shift and go to state 12
    TUNTENTU        shift and go to state 14
    MAY             shift and go to state 15

    instrucciones                  shift and go to state 61
    instruccion                    shift and go to state 3
    instPekenun                    shift and go to state 4
    instDefinicion                 shift and go to state 5
    instAsignacion                 shift and go to state 6
    instTuntentu                   shift and go to state 7
    instMay                        shift and go to state 8
    instKMay                       shift and go to state 9

state 60

    (15) instTuntentu -> TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones . KUYEN
    (2) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . instPekenun
    (7) instruccion -> . instDefinicion
    (8) instruccion -> . instAsignacion
    (9) instruccion -> . instTuntentu
    (10) instruccion -> . instMay
    (11) instruccion -> . instKMay
    (12) instPekenun -> . PEKENUN PARENTESISIZQ expString PARENTESISDER
    (3) instDefinicion -> . RAKIN ID
    (4) instDefinicion -> . NEMEL ID
    (13) instAsignacion -> . ID ASIGNACION expNumero
    (14) instAsignacion -> . ID ASIGNACION expString
    (15) instTuntentu -> . TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (16) instMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (17) instKMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN

    KUYEN           shift and go to state 62
    PEKENUN         shift and go to state 10
    RAKIN           shift and go to state 11
    NEMEL           shift and go to state 13
    ID              shift and go to state 12
    TUNTENTU        shift and go to state 14
    MAY             shift and go to state 15

    instruccion                    shift and go to state 16
    instPekenun                    shift and go to state 4
    instDefinicion                 shift and go to state 5
    instAsignacion                 shift and go to state 6
    instTuntentu                   shift and go to state 7
    instMay                        shift and go to state 8
    instKMay                       shift and go to state 9

state 61

    (16) instMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones . KUYEN
    (17) instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones . KUYEN KMAY ANTU instrucciones KUYEN
    (2) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . instPekenun
    (7) instruccion -> . instDefinicion
    (8) instruccion -> . instAsignacion
    (9) instruccion -> . instTuntentu
    (10) instruccion -> . instMay
    (11) instruccion -> . instKMay
    (12) instPekenun -> . PEKENUN PARENTESISIZQ expString PARENTESISDER
    (3) instDefinicion -> . RAKIN ID
    (4) instDefinicion -> . NEMEL ID
    (13) instAsignacion -> . ID ASIGNACION expNumero
    (14) instAsignacion -> . ID ASIGNACION expString
    (15) instTuntentu -> . TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (16) instMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (17) instKMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN

    KUYEN           shift and go to state 63
    PEKENUN         shift and go to state 10
    RAKIN           shift and go to state 11
    NEMEL           shift and go to state 13
    ID              shift and go to state 12
    TUNTENTU        shift and go to state 14
    MAY             shift and go to state 15

    instruccion                    shift and go to state 16
    instPekenun                    shift and go to state 4
    instDefinicion                 shift and go to state 5
    instAsignacion                 shift and go to state 6
    instTuntentu                   shift and go to state 7
    instMay                        shift and go to state 8
    instKMay                       shift and go to state 9

state 62

    (15) instTuntentu -> TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .

    PEKENUN         reduce using rule 15 (instTuntentu -> TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    RAKIN           reduce using rule 15 (instTuntentu -> TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    NEMEL           reduce using rule 15 (instTuntentu -> TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    ID              reduce using rule 15 (instTuntentu -> TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    TUNTENTU        reduce using rule 15 (instTuntentu -> TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    MAY             reduce using rule 15 (instTuntentu -> TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    $end            reduce using rule 15 (instTuntentu -> TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    KUYEN           reduce using rule 15 (instTuntentu -> TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)


state 63

    (16) instMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .
    (17) instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN . KMAY ANTU instrucciones KUYEN

    PEKENUN         reduce using rule 16 (instMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    RAKIN           reduce using rule 16 (instMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    NEMEL           reduce using rule 16 (instMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    ID              reduce using rule 16 (instMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    TUNTENTU        reduce using rule 16 (instMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    MAY             reduce using rule 16 (instMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    $end            reduce using rule 16 (instMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    KUYEN           reduce using rule 16 (instMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN .)
    KMAY            shift and go to state 64


state 64

    (17) instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY . ANTU instrucciones KUYEN

    ANTU            shift and go to state 65


state 65

    (17) instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU . instrucciones KUYEN
    (2) instrucciones -> . instrucciones instruccion
    (5) instrucciones -> . instruccion
    (6) instruccion -> . instPekenun
    (7) instruccion -> . instDefinicion
    (8) instruccion -> . instAsignacion
    (9) instruccion -> . instTuntentu
    (10) instruccion -> . instMay
    (11) instruccion -> . instKMay
    (12) instPekenun -> . PEKENUN PARENTESISIZQ expString PARENTESISDER
    (3) instDefinicion -> . RAKIN ID
    (4) instDefinicion -> . NEMEL ID
    (13) instAsignacion -> . ID ASIGNACION expNumero
    (14) instAsignacion -> . ID ASIGNACION expString
    (15) instTuntentu -> . TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (16) instMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (17) instKMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN

    PEKENUN         shift and go to state 10
    RAKIN           shift and go to state 11
    NEMEL           shift and go to state 13
    ID              shift and go to state 12
    TUNTENTU        shift and go to state 14
    MAY             shift and go to state 15

    instrucciones                  shift and go to state 66
    instruccion                    shift and go to state 3
    instPekenun                    shift and go to state 4
    instDefinicion                 shift and go to state 5
    instAsignacion                 shift and go to state 6
    instTuntentu                   shift and go to state 7
    instMay                        shift and go to state 8
    instKMay                       shift and go to state 9

state 66

    (17) instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones . KUYEN
    (2) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . instPekenun
    (7) instruccion -> . instDefinicion
    (8) instruccion -> . instAsignacion
    (9) instruccion -> . instTuntentu
    (10) instruccion -> . instMay
    (11) instruccion -> . instKMay
    (12) instPekenun -> . PEKENUN PARENTESISIZQ expString PARENTESISDER
    (3) instDefinicion -> . RAKIN ID
    (4) instDefinicion -> . NEMEL ID
    (13) instAsignacion -> . ID ASIGNACION expNumero
    (14) instAsignacion -> . ID ASIGNACION expString
    (15) instTuntentu -> . TUNTENTU PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (16) instMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN
    (17) instKMay -> . MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN

    KUYEN           shift and go to state 67
    PEKENUN         shift and go to state 10
    RAKIN           shift and go to state 11
    NEMEL           shift and go to state 13
    ID              shift and go to state 12
    TUNTENTU        shift and go to state 14
    MAY             shift and go to state 15

    instruccion                    shift and go to state 16
    instPekenun                    shift and go to state 4
    instDefinicion                 shift and go to state 5
    instAsignacion                 shift and go to state 6
    instTuntentu                   shift and go to state 7
    instMay                        shift and go to state 8
    instKMay                       shift and go to state 9

state 67

    (17) instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN .

    PEKENUN         reduce using rule 17 (instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN .)
    RAKIN           reduce using rule 17 (instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN .)
    NEMEL           reduce using rule 17 (instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN .)
    ID              reduce using rule 17 (instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN .)
    TUNTENTU        reduce using rule 17 (instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN .)
    MAY             reduce using rule 17 (instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN .)
    $end            reduce using rule 17 (instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN .)
    KUYEN           reduce using rule 17 (instKMay -> MAY PARENTESISIZQ eL PARENTESISDER ANTU instrucciones KUYEN KMAY ANTU instrucciones KUYEN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CONCAT in state 49 resolved as shift
WARNING: reduce/reduce conflict in state 30 resolved using rule (instAsignacion -> ID ASIGNACION expNumero)
WARNING: rejected rule (expString -> expNumero) in state 30
